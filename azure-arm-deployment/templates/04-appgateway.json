{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "projectName": {
      "type": "string",
      "defaultValue": "paymentapp",
      "metadata": {
        "description": "Nombre base del proyecto"
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "test",
        "prod"
      ],
      "metadata": {
        "description": "Entorno de despliegue"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Ubicación para todos los recursos"
      }
    },
    "vnetName": {
      "type": "string",
      "metadata": {
        "description": "Nombre de la VNET existente"
      }
    },
    "appGatewaySubnetName": {
      "type": "string",
      "defaultValue": "subnet-appgw",
      "metadata": {
        "description": "Nombre de la subred para Application Gateway"
      }
    },
    "skuName": {
      "type": "string",
      "defaultValue": "WAF_v2",
      "allowedValues": [
        "Standard_v2",
        "WAF_v2"
      ],
      "metadata": {
        "description": "SKU del Application Gateway"
      }
    },
    "capacity": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 1,
      "maxValue": 125,
      "metadata": {
        "description": "Número de instancias del Application Gateway"
      }
    },
    "apiBackendFQDN": {
      "type": "string",
      "defaultValue": "api-temp.placeholder.com",
      "metadata": {
        "description": "FQDN del backend API Container App"
      }
    },
    "frontendBackendFQDN": {
      "type": "string",
      "defaultValue": "frontend-temp.placeholder.com",
      "metadata": {
        "description": "FQDN del backend Frontend Container App"
      }
    },
    "costCenter": {
      "type": "string",
      "defaultValue": "IT-Development",
      "metadata": {
        "description": "Centro de costos para facturación"
      }
    },
    "owner": {
      "type": "string",
      "defaultValue": "DevOps-Team",
      "metadata": {
        "description": "Responsable del recurso"
      }
    }
  },
  "variables": {
    "applicationGatewayName": "[concat('appgw-', parameters('projectName'), '-', parameters('environment'))]",
    "publicIPAddressName": "[concat('pip-', parameters('projectName'), '-', parameters('environment'), '-appgw')]",
    "applicationGatewaySubnetId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('appGatewaySubnetName'))]",
    "commonTags": {
      "Environment": "[parameters('environment')]",
      "Project": "[parameters('projectName')]",
      "CostCenter": "[parameters('costCenter')]",
      "Owner": "[parameters('owner')]",
      "CreatedBy": "ARM Template",
      "ManagedBy": "Infrastructure-as-Code",
      "Purpose": "Payment Application Gateway"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-04-01",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[concat(parameters('projectName'), '-', parameters('environment'), '-', substring(uniqueString(resourceGroup().id), 0, 6))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/applicationGateways",
      "apiVersion": "2023-04-01",
      "name": "[variables('applicationGatewayName')]",
      "location": "[parameters('location')]",
      "tags": "[variables('commonTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
      ],
      "properties": {
        "sku": {
          "name": "[parameters('skuName')]",
          "tier": "[parameters('skuName')]",
          "capacity": "[parameters('capacity')]"
        },
        "gatewayIPConfigurations": [
          {
            "name": "appGatewayIpConfig",
            "properties": {
              "subnet": {
                "id": "[variables('applicationGatewaySubnetId')]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "appGwPublicFrontendIp",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              }
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "port_80",
            "properties": {
              "port": 80
            }
          },
          {
            "name": "port_443",
            "properties": {
              "port": 443
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "api-backend-pool",
            "properties": {
              "backendAddresses": [
                {
                  "fqdn": "[parameters('apiBackendFQDN')]"
                }
              ]
            }
          },
          {
            "name": "frontend-backend-pool",
            "properties": {
              "backendAddresses": [
                {
                  "fqdn": "[parameters('frontendBackendFQDN')]"
                }
              ]
            }
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "api-http-settings",
            "properties": {
              "port": 443,
              "protocol": "Https",
              "cookieBasedAffinity": "Disabled",
              "pickHostNameFromBackendAddress": true,
              "requestTimeout": 30,
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGatewayName')), '/probes/api-health-probe')]"
              }
            }
          },
          {
            "name": "frontend-http-settings",
            "properties": {
              "port": 443,
              "protocol": "Https",
              "cookieBasedAffinity": "Disabled",
              "pickHostNameFromBackendAddress": true,
              "requestTimeout": 30,
              "probe": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGatewayName')), '/probes/frontend-health-probe')]"
              }
            }
          }
        ],
        "httpListeners": [
          {
            "name": "appGwHttpListener",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGatewayName')), '/frontendIPConfigurations/appGwPublicFrontendIp')]"
              },
              "frontendPort": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGatewayName')), '/frontendPorts/port_80')]"
              },
              "protocol": "Http"
            }
          }
        ],
        "requestRoutingRules": [
          {
            "name": "api-routing-rule",
            "properties": {
              "ruleType": "PathBasedRouting",
              "httpListener": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGatewayName')), '/httpListeners/appGwHttpListener')]"
              },
              "urlPathMap": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGatewayName')), '/urlPathMaps/urlPathMap')]"
              }
            }
          }
        ],
        "urlPathMaps": [
          {
            "name": "urlPathMap",
            "properties": {
              "defaultBackendAddressPool": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGatewayName')), '/backendAddressPools/frontend-backend-pool')]"
              },
              "defaultBackendHttpSettings": {
                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGatewayName')), '/backendHttpSettingsCollection/frontend-http-settings')]"
              },
              "pathRules": [
                {
                  "name": "api-path-rule",
                  "properties": {
                    "paths": [
                      "/api/*"
                    ],
                    "backendAddressPool": {
                      "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGatewayName')), '/backendAddressPools/api-backend-pool')]"
                    },
                    "backendHttpSettings": {
                      "id": "[concat(resourceId('Microsoft.Network/applicationGateways', variables('applicationGatewayName')), '/backendHttpSettingsCollection/api-http-settings')]"
                    }
                  }
                }
              ]
            }
          }
        ],
        "probes": [
          {
            "name": "api-health-probe",
            "properties": {
              "protocol": "Https",
              "path": "/api/health",
              "interval": 30,
              "timeout": 30,
              "unhealthyThreshold": 3,
              "pickHostNameFromBackendHttpSettings": true
            }
          },
          {
            "name": "frontend-health-probe",
            "properties": {
              "protocol": "Https",
              "path": "/",
              "interval": 30,
              "timeout": 30,
              "unhealthyThreshold": 3,
              "pickHostNameFromBackendHttpSettings": true
            }
          }
        ],
        "webApplicationFirewallConfiguration": {
          "enabled": true,
          "firewallMode": "Prevention",
          "ruleSetType": "OWASP",
          "ruleSetVersion": "3.2"
        }
      }
    }
  ],
  "outputs": {
    "applicationGatewayName": {
      "type": "string",
      "value": "[variables('applicationGatewayName')]"
    },
    "publicIPAddress": {
      "type": "string",
      "value": "[reference(variables('publicIPAddressName')).ipAddress]"
    },
    "applicationGatewayFQDN": {
      "type": "string",
      "value": "[reference(variables('publicIPAddressName')).dnsSettings.fqdn]"
    }
  }
}